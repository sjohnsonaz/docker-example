# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: sjohnsonaz
  imageRepository: 'docker-example'
  containerRegistry: 'sjohnsonaz.azurecr.io'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'sjohnsonaz1874adbf-auth'
  namespace: 'docker-example'
  # ingressVersion: 0.35.0

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: Docker@2
      displayName: Build and Push Ingress
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/ingress
        buildContext: '$(Build.SourcesDirectory)/ingress'
        dockerfile: '$(Build.SourcesDirectory)/ingress/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and Push Client
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/client
        buildContext: '$(Build.SourcesDirectory)/client'
        dockerfile: '$(Build.SourcesDirectory)/client/Dockerfile'
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and Push Server
      inputs:
        command: buildAndPush
        repository: $(imageRepository)/server
        buildContext: '$(Build.SourcesDirectory)/server'
        dockerfile: '$(Build.SourcesDirectory)/server/Dockerfile'
        tags: |
          $(tag)
          
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'DockerExample-1328.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          # - task: KubernetesManifest@0
          #   displayName: Deploy Ingress
          #   inputs:
          #     action: deploy
          #     manifests: |
          #       https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v$(ingressVersion)/deploy/static/provider/do/deploy.yaml
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              namespace: $(namespace)
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/client.yml
                $(Pipeline.Workspace)/manifests/ingress.yml
                $(Pipeline.Workspace)/manifests/server.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository)/client:$(tag)
                $(containerRegistry)/$(imageRepository)/server:$(tag)
                $(containerRegistry)/$(imageRepository)/ingress:$(tag)
