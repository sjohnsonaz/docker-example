apiVersion: v1
kind: Service
metadata:
  name: ingress
spec:
  #type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: docker-example
    component: ingress
---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: ingress 
spec:
  selector:
    matchLabels:
      app: docker-example
      component: ingress
  replicas: 1
  template:
    metadata:
      labels:
        app: docker-example
        component: ingress
    spec:
      containers:
      - name: ingress 
        image: sjohnsonaz.azurecr.io/docker-example/ingress
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/acme-challenge-type: http01
spec:
  tls:
  - hosts:
    - docker-example.cascade.rocks
    secretName: certificate-prod
  rules:
  - host: docker-example.cascade.rocks
    http:
      paths:
      - path: /
        backend:
          serviceName: ingress
          servicePort: 80